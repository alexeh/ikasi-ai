/**
 * @file Firestore Security Rules
 * @description This ruleset grants all permissions to all users, effectively disabling security.
 *   This is for prototyping purposes only and should never be used in a production environment.
 * @dataStructure The Firestore database contains collections for sync logs, admin reviews, admins, admin roles, reading documents, mental math games, and math word problem games.
 * @keySecurityDecisions All read and write operations are allowed for all users.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows all operations on sync log documents.
     * @path /sync_logs/{syncLogId}
     * @allow (create) Any authenticated user can create a sync log.
     * @allow (read) Any authenticated user can read a sync log.
     * @allow (write) Any authenticated user can update or delete a sync log.
     * @deny (none) No requests are denied.
     * @principle Disables security for prototyping.
     */
    match /sync_logs/{syncLogId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all operations on admin review documents.
     * @path /admin_reviews/{adminReviewId}
     * @allow (create) Any authenticated user can create an admin review.
     * @allow (read) Any authenticated user can read an admin review.
     * @allow (write) Any authenticated user can update or delete an admin review.
     * @deny (none) No requests are denied.
     * @principle Disables security for prototyping.
     */
    match /admin_reviews/{adminReviewId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all operations on admin documents.
     * @path /admins/{adminId}
     * @allow (create) Any authenticated user can create an admin document.
     * @allow (read) Any authenticated user can read an admin document.
     * @allow (write) Any authenticated user can update or delete an admin document.
     * @deny (none) No requests are denied.
     * @principle Disables security for prototyping.
     */
    match /admins/{adminId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all operations on admin role documents.
     * @path /roles_admin/{adminId}
     * @allow (create) Any authenticated user can create an admin role.
     * @allow (read) Any authenticated user can read an admin role.
     * @allow (write) Any authenticated user can update or delete an admin role.
     * @deny (none) No requests are denied.
     * @principle Disables security for prototyping.
     */
    match /roles_admin/{adminId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all operations on reading documents.
     * @path /readingDocuments/{documentId}
     * @allow (create) Any authenticated user can create a reading document.
     * @allow (read) Any authenticated user can read a reading document.
     * @allow (write) Any authenticated user can update or delete a reading document.
     * @deny (none) No requests are denied.
     * @principle Disables security for prototyping.
     */
    match /readingDocuments/{documentId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all operations on mental math game documents.
     * @path /mentalMathGames/{gameId}
     * @allow (create) Any authenticated user can create a mental math game document.
     * @allow (read) Any authenticated user can read a mental math game document.
     * @allow (write) Any authenticated user can update or delete a mental math game document.
     * @deny (none) No requests are denied.
     * @principle Disables security for prototyping.
     */
    match /mentalMathGames/{gameId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all operations on math word problem game documents.
     * @path /mathWordProblemGames/{gameId}
     * @allow (create) Any authenticated user can create a math word problem game document.
     * @allow (read) Any authenticated user can read a math word problem game document.
     * @allow (write) Any authenticated user can update or delete a math word problem game document.
     * @deny (none) No requests are denied.
     * @principle Disables security for prototyping.
     */
    match /mathWordProblemGames/{gameId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}